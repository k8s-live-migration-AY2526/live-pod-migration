apiVersion: v1
kind: Pod
metadata:
  name: ai-streamer
  namespace: default
spec:
  containers:
  - name: streamer
    image: python:3.9-slim
    command: ["python", "-u", "-c"]
    args:
    - |
      import time, json, os, random
      
      # Load state if restored
      state_file = "/data/state.json"
      if os.path.exists(state_file):
          with open(state_file, 'r') as f:
              state = json.load(f)
          print(f"âœ… RESTORED! Continuing from SEQ {state['seq']}")
          print(f"   Previous host: {state.get('host', 'unknown')}")
      else:
          state = {"seq": 0, "story": "In 2157, humanity discovered", "host": ""}
          print("ðŸš€ Starting new AI story generation")
      
      state["host"] = os.environ.get('HOSTNAME', 'unknown')
      print(f"   Current host: {state['host']}\n")
      
      # AI-like generation
      words = ["quantum", "portal", "ancient", "technology", "civilization", 
               "mysterious", "energy", "dimension", "consciousness", "evolved"]
      
      while True:
          state["seq"] += 1
          random.seed(state["seq"])
          chunk = " ".join(random.choices(words, k=4))
          
          print(f"[SEQ:{state['seq']:03d}] {chunk}...")
          
          state["story"] = (state["story"] + " " + chunk)[-300:]
          
          os.makedirs("/data", exist_ok=True)
          with open(state_file, 'w') as f:
              json.dump(state, f)
          
          if state["seq"] % 5 == 0:
              print(f"  ðŸ“Š Stats: {state['seq']} sequences on {state['host']}")
          
          time.sleep(2)
    volumeMounts:
    - name: data
      mountPath: /data
  volumes:
  - name: data
    emptyDir: {}